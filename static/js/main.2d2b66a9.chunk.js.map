{"version":3,"sources":["overmind/state.ts","overmind/actions.ts","overmind/tree.ts","overmind/onInitialize.ts","overmind/index.ts","components/Map.tsx","components/LeftDrawer.tsx","components/BottomDrawer.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["state","oada","oadaCacheOvermind","connection","loaded","selectedField","mapCenter","lat","lon","zoom","this","Object","keys","bookmarks","agrinovus","selectedFieldName","fields","field","polygon","progress","acre","areaInAcre","percentage","selectField","id","tree","_type","_rev","statistics","onInitialize","a","actions","effects","connect","token","domain","then","response","console","log","error","connectionId","requests","path","watch","get","connection_id","config","useOvermind","createHook","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","ChangeView","center","useMap","setView","Marker","prototype","options","MapComponent","position","fieldPolygon","progressPolygon","MapContainer","TileLayer","attribution","url","Polygon","pathOptions","color","positions","fillOpacity","THEME","createMuiTheme","palette","type","useStyles","makeStyles","theme","createStyles","root","display","appBar","flexGrow","justifyContent","zIndex","menuButton","marginRight","spacing","hide","drawer","width","flexShrink","drawerPaperBig","background","top","drawerPaperSmall","drawerHeader","alignItems","LeftDrawerComponent","classes","useTheme","React","useState","open","setOpen","bigScreen","useMediaQuery","className","CssBaseline","AppBar","Toolbar","IconButton","aria-label","onClick","edge","clsx","Typography","variant","component","Box","style","Drawer","anchor","paper","align","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","BorderLinearProgress","withStyles","height","borderRadius","colorPrimary","backgroundColor","grey","bar","LinearProgress","LinearProgressWithLabel","props","mr","minWidth","Math","round","value","transition","transitions","create","easing","sharp","duration","leavingScreen","bottom","appBarShift","marginLeft","easeOut","enteringScreen","drawerPaper","mixins","toolbar","drawerText","progressBar","padding","BottomDrawerComponent","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","fontWeight","gutterBottom","content","App","LeftDrawer","Map","BottomDrawer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","overmind","createOvermind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d2b66a9.chunk.js","sourcesContent":["import oadaCacheOvermind from \"@oada/oada-cache-overmind\";\nconst oada = oadaCacheOvermind(\"oada\");\n\n// Define type of State\nexport type State = {\n  oada: any;\n  connection: null | string;\n  loaded: boolean;\n  mapCenter: { lat: number; lon: number; zoom: number };\n  field: Array<any>;\n  progressPolygon: Array<any>;\n  fields: Array<string>;\n  selectedField: null | number;\n  progress: { acre: number; percentage: number };\n};\n\n// Initialize State\nexport const state: State = {\n  oada: oada.state,\n  connection: null,\n  loaded: false,\n  selectedField: null,\n  mapCenter: { lat: 40.77884287, lon: -102.084164, zoom: 14 },\n  get fields() {\n    if (this.connection && this.loaded) {\n      // Connected\n      return Object.keys(\n        this.oada[this.connection].bookmarks.agrinovus[\"field-index\"]\n      );\n    } else {\n      return [];\n    }\n  },\n  get field() {\n    if (this.connection && this.loaded && this.selectedField !== null) {\n      const selectedFieldName = this.fields[this.selectedField];\n      return this.oada[this.connection].bookmarks.agrinovus[\"field-index\"][\n        selectedFieldName\n      ].field.polygon;\n    } else {\n      return [];\n    }\n  },\n  get progressPolygon() {\n    if (this.connection && this.loaded && this.selectedField !== null) {\n      const selectedFieldName = this.fields[this.selectedField];\n      return this.oada[this.connection].bookmarks.agrinovus[\"field-index\"][\n        selectedFieldName\n      ].progress.polygon;\n    } else {\n      return [];\n    }\n  },\n  get progress() {\n    if (this.connection && this.loaded && this.selectedField !== null) {\n      const selectedFieldName = this.fields[this.selectedField];\n      return {\n        acre: this.oada[this.connection].bookmarks.agrinovus[\"field-index\"][\n          selectedFieldName\n        ].progress.areaInAcre,\n        percentage:\n          this.oada[this.connection].bookmarks.agrinovus[\"field-index\"][\n            selectedFieldName\n          ].progress.progress * 100,\n      };\n    } else {\n      return { acre: 0, percentage: 0 };\n    }\n  },\n};\n","import { Action } from \"overmind\";\n\nexport const selectField: Action<number> = ({ state }, id) => {\n    state.selectedField = id;\n    state.mapCenter.lat = state.field[0][0][0];\n    state.mapCenter.lon = state.field[0][0][1];\n};\n","// OADA Tree\nexport const tree = {\n  bookmarks: {\n    _type: \"application/json\",\n    _rev: 0,\n    agrinovus: {\n      _type: \"application/json\",\n      _rev: 0,\n      \"field-index\": {\n        \"*\": {\n          _type: \"application/json\",\n          _rev: 0,\n          field: {\n            _type: \"application/json\",\n            _rev: 0,\n          },\n          progress: {\n            _type: \"application/json\",\n            _rev: 0,\n          },\n          statistics: {\n            _type: \"application/json\",\n            _rev: 0,\n          },\n        },\n      },\n    },\n  },\n};\n","import { OnInitialize } from \"overmind\";\nimport { tree } from \"./tree\";\n\nexport const onInitialize: OnInitialize = async ({\n  state,\n  actions,\n  effects,\n}) => {\n  await actions.oada\n    .connect({\n      token: \"abc\",\n      domain: \"https://cloudradio40.ecn.purdue.edu\",\n    })\n    .then((response) => {\n      console.log(response);\n      if (!response.error) {\n        state.connection = response.connectionId;\n      }\n      return response;\n    });\n  const requests = [\n    {\n      path: \"/bookmarks/agrinovus\",\n      tree,\n      watch: {\n        actions: [],\n      },\n    },\n  ];\n  await actions.oada.get({ requests, connection_id: state.connection });\n  state.loaded = true;\n  //console.log(state.oada.localhost.bookmarks.agrinovus[\"field-index\"].Field1);\n};\n","import { createHook } from \"overmind-react\";\nimport { state } from \"./state\";\nimport * as actions from \"./actions\";\n//import * as effects from './effects';\nimport { onInitialize } from \"./onInitialize\";\nimport { IConfig } from \"overmind\";\nimport oadaCacheOvermind from \"@oada/oada-cache-overmind\";\n\nconst oada = oadaCacheOvermind(\"oada\");\n\nexport const config = {\n  state,\n  actions: { oada: oada.actions, ...actions },\n  effects: { oada: oada.effects },\n  onInitialize,\n};\n\ndeclare module \"overmind\" {\n  interface Config extends IConfig<typeof config> {}\n}\n\nexport const useOvermind = createHook<typeof config>();\n","import React from \"react\";\nimport { useOvermind } from \"../overmind\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./map.css\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  CircleMarker,\n  Tooltip,\n  Polygon,\n  useMap,\n} from \"react-leaflet\";\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction ChangeView({ center }) {\n  const map = useMap();\n  map.setView(center, 14);\n  return null;\n}\n\nconst MapComponent = () => {\n  const { state } = useOvermind();\n  const position: L.LatLngTuple = [state.mapCenter.lat, state.mapCenter.lon];\n    const fieldPolygon: [number, number][] = state.field;\n    const progressPolygon: [number, number][] = state.progressPolygon;\n\n    return (\n        <MapContainer center={position} zoom={14}>\n            <ChangeView center={position} />\n            <TileLayer\n                attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            />\n            <Polygon pathOptions={{ color: \"yellow\" }} positions={fieldPolygon} />\n            <Polygon pathOptions={{ color: \"yellow\", fillOpacity: 1 }} positions={progressPolygon} />\n\n        </MapContainer>\n    );\n};\n\nexport default MapComponent;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport { useOvermind } from \"../overmind\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Box from \"@material-ui/core/Box\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst drawerWidth = 200;\n\nconst THEME = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      display: \"flex\",\n      flexGrow: 1,\n      justifyContent: \"space-between\",\n      zIndex: 2,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaperBig: {\n      width: drawerWidth,\n      background: '#3f51b5',\n      zIndex: 2,\n      top: 64,\n    },\n    drawerPaperSmall: {\n      width: drawerWidth,\n      background: '#3f51b5',\n      zIndex: 2,\n      top: 56,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\n\nconst LeftDrawerComponent = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const { state, actions } = useOvermind();\n  const bigScreen = useMediaQuery('(min-width:600px)');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.appBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton \n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerClose}\n            edge='start'\n            className={clsx(classes.menuButton, \n                            !open && classes.hide)}\n            >\n            <ChevronLeftIcon />\n          </IconButton>\n          <Typography variant=\"h4\" component=\"h1\">\n            ODAP\n          </Typography>\n          <Box style={{ width: \"6%\" }}></Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: clsx(bigScreen && classes.drawerPaperBig, \n                      !bigScreen && classes.drawerPaperSmall),\n        }}\n      >\n\n        <MuiThemeProvider theme={THEME}>\n          <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n            Fields\n          </Typography>\n          <Divider />\n          <List>\n            {state.fields.map((text, index) => (\n              <ListItem\n                button\n                key={text}\n                onClick={() => actions.selectField(index)}\n              >\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary={text} color=\"textSecondary\" />\n              </ListItem>\n            ))}\n          </List>\n        </MuiThemeProvider>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default LeftDrawerComponent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles, withStyles } from '@material-ui/core/styles';\nimport { useOvermind } from \"../overmind\";\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nconst drawerHeight = 280;\n\nconst THEME = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 25,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFFFFF',\n    },\n  }),\n)(LinearProgress);\n\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          variant=\"body2\"\n          color=\"textPrimary\">\n            {`${Math.round(props.value,)}%`}\n        </Typography>\n      </Box>\n    </Box>\n    );\n  }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'height'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      top: 'auto',\n      bottom: 0,\n      alignItems: 'center',\n      zIndex: 3,\n    },\n    appBarShift: {\n      height: '240 px',\n      marginLeft: drawerHeight,\n      transition: theme.transitions.create(['margin', 'height'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      zIndex: 3,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      height: drawerHeight,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      height: drawerHeight,\n      background: '#3f51b5',\n      alignItems: 'center',\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    drawerText: {\n\n    },\n    progressBar: {\n      width: '75%',\n      padding: theme.spacing(2,0,4),\n    }\n  }),\n);\n\nconst BottomDrawerComponent = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const { state, actions } = useOvermind();\n  const [progress, setProgress] = React.useState(10);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <ExpandLessIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor='bottom'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <MuiThemeProvider theme={THEME}>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            <ExpandMoreIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <Typography\n          variant='h6'\n          color=\"textSecondary\"\n          style={{ fontWeight: 600 }}\n          gutterBottom>\n          {state.selectedField !== null? state.fields[state.selectedField] : \"(Field not selected)\"}\n        </Typography>\n        <Typography\n            color=\"textSecondary\">\n            Harvest Progress\n        </Typography>\n        <div className={classes.progressBar}>\n            <LinearProgressWithLabel value={state.progress.percentage} />\n        </div>\n        <Typography\n            color=\"textSecondary\">\n            Harvest Time: xxx hr\n        </Typography>\n        <Typography\n            color=\"textSecondary\">\n            Total Area: xxx ac\n        </Typography>\n        <Typography\n            color=\"textSecondary\">\n            Harvested Area: {state.progress.acre} ac\n        </Typography>\n        </MuiThemeProvider>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default BottomDrawerComponent;\n","import React, { useCallback, useState } from \"react\";\nimport clsx from 'clsx';\nimport { useOvermind } from \"../overmind\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport MapComponent from \"./Map\";\nimport LeftDrawerComponent from \"./LeftDrawer\";\nimport BottomDrawerComponent from \"./BottomDrawer\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      marginLeft: -drawerWidth,\n      zIndex: 1,\n    },\n  })\n);\n\nconst App = () => {\n  const { state, actions } = useOvermind();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <LeftDrawerComponent />\n      <main className={classes.content}>\n        <MapComponent />\n      </main>\n      <BottomDrawerComponent />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { config } from \"./overmind\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const overmind = createOvermind(config, {\n//  devtools: false,\n});\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}